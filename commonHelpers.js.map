{"version":3,"file":"commonHelpers.js","sources":["../src/task-1.js","../src/task-2.js","../src/task-3.js","../src/task-4.js"],"sourcesContent":["const getUserNames = (users) => {\n  return users.map(user => user.name);\n};\n\nconsole.log(\n  getUserNames([\n  {\n    name: \"Moore Hensley\",\n    email: \"moorehensley@indexia.com\",\n    balance: 2811\n  },\n  {\n    name: \"Sharlene Bush\",\n    email: \"sharlenebush@tubesys.com\",\n    balance: 3821\n  },\n  {\n    name: \"Ross Vazquez\",\n    email: \"rossvazquez@xinware.com\",\n    balance: 3793\n  },\n  {\n    name: \"Elma Head\",\n    email: \"elmahead@omatom.com\",\n    balance: 2278\n  },\n  {\n    name: \"Carey Barr\",\n    email: \"careybarr@nurali.com\",\n    balance: 3951\n  },\n  {\n    name: \"Blackburn Dotson\",\n    email: \"blackburndotson@furnigeer.com\",\n    balance: 1498\n  },\n  {\n    name: \"Sheree Anthony\",\n    email: \"shereeanthony@kog.com\",\n    balance: 2764\n  },\n])\n); // [\"Moore Hensley\", \"Sharlene Bush\", \"Ross Vazquez\", \"Elma Head\", \"Carey Barr\", \"Blackburn Dotson\", \"Sheree Anthony\"]\n\n","const getUsersWithFriend = (users, friendName) =>{\n  return users.filter(user => user.friends.includes(friendName));  \n};\n\nconst allUsers = [\n  {\n    name: \"Moore Hensley\",\n    friends: [\"Sharron Pace\"]\n  },\n  {\n    name: \"Sharlene Bush\",\n    friends: [\"Briana Decker\", \"Sharron Pace\"]\n  },\n  {\n    name: \"Ross Vazquez\",\n    friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"]\n  },\n  {\n    name: \"Elma Head\",\n    friends: [\"Goldie Gentry\", \"Aisha Tran\"]\n  },\n  {\n    name: \"Carey Barr\",\n    friends: [\"Jordan Sampson\", \"Eddie Strong\"]\n  },\n  {\n    name: \"Blackburn Dotson\",\n    friends: [\"Jacklyn Lucas\", \"Linda Chapman\"]\n  },\n  {\n    name: \"Sheree Anthony\",\n    friends: [\"Goldie Gentry\", \"Briana Decker\"]\n  }\n];\n\nconsole.log(getUsersWithFriend(allUsers, \"Briana Decker\")); \n// [\n//   {\n//     name: \"Sharlene Bush\",\n//     friends: [\"Briana Decker\", \"Sharron Pace\"]\n//   },\n//   {\n//     name: \"Sheree Anthony\",\n//     friends: [\"Goldie Gentry\", \"Briana Decker\"]\n//   }\n// ]\n\nconsole.log(getUsersWithFriend(allUsers, \"Goldie Gentry\"));\n// [\n//   {\n//     name: \"Elma Head\",\n//     friends: [\"Goldie Gentry\", \"Aisha Tran\"]\n//   },\n//   {\n//     name: \"Sheree Anthony\",\n//     friends: [\"Goldie Gentry\", \"Briana Decker\"]\n//   }\n// ]\n\nconsole.log(getUsersWithFriend(allUsers, \"Adrian Cross\" )); // []\n","const sortByDescendingFriendCount = (users) => {\n    return users.toSorted((firstUser, secondUser) => secondUser.friends.length - firstUser.friends.length)\n    \n}\nconsole.log(\n  sortByDescendingFriendCount([\n    {\n      name: \"Moore Hensley\",\n      friends: [\"Sharron Pace\"],\n      gender: \"male\"\n    },\n    {\n      name: \"Sharlene Bush\",\n      friends: [\"Briana Decker\", \"Sharron Pace\"],\n      gender: \"female\"\n    },\n    {\n      name: \"Ross Vazquez\",\n      friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n      gender: \"male\"\n    },\n    {\n      name: \"Elma Head\",\n      friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n      gender: \"female\"\n    },\n    {\n      name: \"Carey Barr\",\n      friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n      gender: \"male\"\n    },\n    {\n      name: \"Blackburn Dotson\",\n      friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n      gender: \"male\"\n    },\n    {\n      name: \"Sheree Anthony\",\n      friends: [\"Goldie Gentry\", \"Briana Decker\"],\n      gender: \"female\"\n    }\n  ])\n);\n// [\n//   {\n//     name: \"Ross Vazquez\",\n//     friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n//     gender: \"male\"\n//   },\n//   {\n//     name: \"Sharlene Bush\",\n//     friends: [\"Briana Decker\", \"Sharron Pace\"],\n//     gender: \"female\"\n//   },\n//   {\n//     name: \"Elma Head\",\n//     friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n//     gender: \"female\"\n//   },\n//   {\n//     name: \"Carey Barr\",\n//     friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n//     gender: \"male\"\n//   },\n//   {\n//     name: \"Blackburn Dotson\",\n//     friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n//     gender: \"male\"\n//   },\n//   {\n//     name: \"Sheree Anthony\",\n//     friends: [\"Goldie Gentry\", \"Briana Decker\"],\n//     gender: \"female\"\n//   },\n//   {\n//     name: \"Moore Hensley\",\n//     friends: [\"Sharron Pace\"],\n//     gender: \"male\"\n//   }\n// ]\n","const getTotalBalanceByGender = (users, gender) => {\n    return users\n    .filter(user => user.gender === gender)\n    .reduce((totalBalance, user) => {\n        return totalBalance += user.balance;\n    }, 0)\n}\n\nconst clients = [\n\t{\n    name: \"Moore Hensley\",\n    gender: \"male\",\n    balance: 2811\n  },\n  {\n    name: \"Sharlene Bush\",\n    gender: \"female\",\n    balance: 3821\n  },\n  {\n    name: \"Ross Vazquez\",\n    gender: \"male\",\n    balance: 3793\n  },\n  {\n    name: \"Elma Head\",\n    gender: \"female\",\n    balance: 2278\n  },\n  {\n    name: \"Carey Barr\",\n    gender: \"male\",\n    balance: 3951\n  },\n  {\n    name: \"Blackburn Dotson\",\n    gender: \"male\",\n    balance: 1498\n  },\n  {\n    name: \"Sheree Anthony\",\n    gender: \"female\",\n    balance: 2764\n  }\n];\n\nconsole.log(getTotalBalanceByGender(clients, \"male\")); // 12053\n\nconsole.log(getTotalBalanceByGender(clients, \"female\")); // 8863\n"],"names":["getUserNames","users","user","getUsersWithFriend","friendName","allUsers","sortByDescendingFriendCount","firstUser","secondUser","getTotalBalanceByGender","gender","totalBalance","clients"],"mappings":"ssBAAA,MAAMA,EAAgBC,GACbA,EAAM,IAAIC,GAAQA,EAAK,IAAI,EAGpC,QAAQ,IACNF,EAAa,CACb,CACE,KAAM,gBACN,MAAO,2BACP,QAAS,IACV,EACD,CACE,KAAM,gBACN,MAAO,2BACP,QAAS,IACV,EACD,CACE,KAAM,eACN,MAAO,0BACP,QAAS,IACV,EACD,CACE,KAAM,YACN,MAAO,sBACP,QAAS,IACV,EACD,CACE,KAAM,aACN,MAAO,uBACP,QAAS,IACV,EACD,CACE,KAAM,mBACN,MAAO,gCACP,QAAS,IACV,EACD,CACE,KAAM,iBACN,MAAO,wBACP,QAAS,IACV,CACH,CAAC,CACD,EC1CA,MAAMG,EAAqB,CAACF,EAAOG,IAC1BH,EAAM,OAAOC,GAAQA,EAAK,QAAQ,SAASE,CAAU,CAAC,EAGzDC,EAAW,CACf,CACE,KAAM,gBACN,QAAS,CAAC,cAAc,CACzB,EACD,CACE,KAAM,gBACN,QAAS,CAAC,gBAAiB,cAAc,CAC1C,EACD,CACE,KAAM,eACN,QAAS,CAAC,mBAAoB,mBAAoB,eAAe,CAClE,EACD,CACE,KAAM,YACN,QAAS,CAAC,gBAAiB,YAAY,CACxC,EACD,CACE,KAAM,aACN,QAAS,CAAC,iBAAkB,cAAc,CAC3C,EACD,CACE,KAAM,mBACN,QAAS,CAAC,gBAAiB,eAAe,CAC3C,EACD,CACE,KAAM,iBACN,QAAS,CAAC,gBAAiB,eAAe,CAC3C,CACH,EAEA,QAAQ,IAAIF,EAAmBE,EAAU,eAAe,CAAC,EAYzD,QAAQ,IAAIF,EAAmBE,EAAU,eAAe,CAAC,EAYzD,QAAQ,IAAIF,EAAmBE,EAAU,cAAgB,CAAA,EC3DzD,MAAMC,EAA+BL,GAC1BA,EAAM,SAAS,CAACM,EAAWC,IAAeA,EAAW,QAAQ,OAASD,EAAU,QAAQ,MAAM,EAGzG,QAAQ,IACND,EAA4B,CAC1B,CACE,KAAM,gBACN,QAAS,CAAC,cAAc,EACxB,OAAQ,MACT,EACD,CACE,KAAM,gBACN,QAAS,CAAC,gBAAiB,cAAc,EACzC,OAAQ,QACT,EACD,CACE,KAAM,eACN,QAAS,CAAC,mBAAoB,mBAAoB,eAAe,EACjE,OAAQ,MACT,EACD,CACE,KAAM,YACN,QAAS,CAAC,gBAAiB,YAAY,EACvC,OAAQ,QACT,EACD,CACE,KAAM,aACN,QAAS,CAAC,iBAAkB,cAAc,EAC1C,OAAQ,MACT,EACD,CACE,KAAM,mBACN,QAAS,CAAC,gBAAiB,eAAe,EAC1C,OAAQ,MACT,EACD,CACE,KAAM,iBACN,QAAS,CAAC,gBAAiB,eAAe,EAC1C,OAAQ,QACT,CACL,CAAG,CACH,EC1CA,MAAMG,EAA0B,CAACR,EAAOS,IAC7BT,EACN,OAAOC,GAAQA,EAAK,SAAWQ,CAAM,EACrC,OAAO,CAACC,EAAcT,IACZS,GAAgBT,EAAK,QAC7B,CAAC,EAGFU,EAAU,CACf,CACG,KAAM,gBACN,OAAQ,OACR,QAAS,IACV,EACD,CACE,KAAM,gBACN,OAAQ,SACR,QAAS,IACV,EACD,CACE,KAAM,eACN,OAAQ,OACR,QAAS,IACV,EACD,CACE,KAAM,YACN,OAAQ,SACR,QAAS,IACV,EACD,CACE,KAAM,aACN,OAAQ,OACR,QAAS,IACV,EACD,CACE,KAAM,mBACN,OAAQ,OACR,QAAS,IACV,EACD,CACE,KAAM,iBACN,OAAQ,SACR,QAAS,IACV,CACH,EAEA,QAAQ,IAAIH,EAAwBG,EAAS,MAAM,CAAC,EAEpD,QAAQ,IAAIH,EAAwBG,EAAS,QAAQ,CAAC"}